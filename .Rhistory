apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3]) })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n") })
apply(birthdays, 1, function(x) { print(x[1], ":", month.abb[x[2]], x[3], "\n") })
apply(birthdays, 1, function(x) { print(cat(x[1], ":", month.abb[x[2]], x[3], "\n") )})
apply(birthdays, 1, function(x) { print(x[1], ":", month.abb[x[2]], x[3], "\n") })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n") })
sapply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n") })
sapply(birthdays, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n") })
tapply(birthdays, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n") })
apply(birthdays, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n") })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n") })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], '\n') })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], fill=T) })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], fill=T) })
apply(birthdays, 1, function(x) { paste(x[1], ":", month.abb[x[2]], x[3], '\n') })
apply(birthdays, 1, function(x) { paste(x[1], ":", month.abb[x[2]], x[3], "\n") })
print(cat(""))
(cat(""))
apply(birthdays, 1, function(x) { paste(x[1], ":", month.abb[x[2]], x[3], "\n", fill=TRUE) })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], "\n", fill=TRUE) })
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], fill=TRUE) })
dates = apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], fill=TRUE) })
dates
apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], fill=TRUE) })
dates = apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], fill=TRUE) })
formattedBirthdays = apply(birthdays, 1, function(x) { cat(x[1], ":", month.abb[x[2]], x[3], fill=TRUE) })
commencementSpeeches = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/presidential-commencement-speeches/commencement_speeches.csv", header = TRUE)
View(composersBySeason)
View(composersBySeasonLong)
View(commencementSpeeches)
table(commencementSpeeches$state)
sort(table(commencementSpeeches$state))
tail(sort(table(commencementSpeeches$state)))
state.abb[tail(sort(table(commencementSpeeches$state)))}
state.abb[tail(sort(table(commencementSpeeches$state)))]
tail(sort(table(commencementSpeeches$state)))
commencementSpeeches = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/presidential-commencement-speeches/commencement_speeches.csv", header = TRUE)
tail(sort(table(commencementSpeeches$state)))
library(tidyverse);  library(reshape2);
NYPhil1842 = fromJSON("https://raw.githubusercontent.com/nyphilarchive/PerformanceHistory/master/Programs/json/complete.json")
seasons = (NYPhil1842 %>% map("season"))$programs
composers = (NYPhil1842 %>% map("works"))$programs %>% map("composerName")
beethovenCount = unlist(composers %>% map(~ sum(str_count(na.omit(.), "Beethoven"))))
mozartCount = unlist(composers %>% map(~ sum(str_count(na.omit(.), "Mozart"))))
mendelssohnCount = unlist(composers %>% map(~ sum(str_count(na.omit(.), "Mendelssohn"))))
pieceCount = unlist(composers %>% map(~ length(na.omit(.))))
composersBySeason <- data_frame(season = seasons, pieceCount = pieceCount, beethoven = beethovenCount, mozart = mozartCount, mendelssohn = mendelssohnCount)
composersBySeason = ddply(composersBySeason,"seasons",numcolwise(sum))
composersBySeason[,3:5] = composersBySeason[,3:5]/composersBySeason$pieceCount
composersBySeasonLong = melt(composersBySeason[-NROW(composersBySeason),-2], id="seasons")
p1 = ggplot(data=composersBySeasonLong,  aes(x=seasons, y=value, color=variable, group=variable)) +
geom_line() + theme(axis.text.x = element_text(size=5, angle=90))
print(p1)
#composerNames <- na.exclude(unlist((NYPhil1842 %>% map("works"))$programs %>% map("composerName")))
#composerNames = data_frame(composer=composerNames)
#sum(str_count(composerNames$composer, "Mendelssohn"))
state.name[tail(sort(table(commencementSpeeches$state)))]
tail(sort(table(commencementSpeeches$state)))
tail(sort(table(commencementSpeeches$state)))[1,]
tail(dim(sort(table(commencementSpeeches$state))))
names(tail(sort(table(commencementSpeeches$state))))
tail(sort(table(commencementSpeeches$state)))
head(sort(table(commencementSpeeches$state)))
tail
tail(sort(table(commencementSpeeches$state)))
commas = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/comma-survey-data/comma-survey-data.csv", header = TRUE)
View(commas)
congress = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/congress-age/congress-terms.csv", header = TRUE)
View(congress)
levels(congress$chamber)
typeof(congress$termstart)
as.Date(congress$termstart[1])
lubridate::year(as.Date(congress$termstart[1]))
year(as.Date(congress$termstart[1]))
typeof(lubridate::year(as.Date(congress$termstart[1])))
house1947 = subset(congress, chamber == "house" & lubridate::year(as.Date(termstart)) == 1947)
View(house1947)
house1947 = subset(congress, chamber == "house" & lubridate::year(as.Date(termstart)) == 1950)
View(house1947)
house1947 = subset(congress, chamber == "house" & lubridate::year(as.Date(termstart)) == 1951)
house1947 = subset(congress, chamber == "house" & lubridate::year(as.Date(termstart)) == 1947)
qqnorm(house1947$age)
qqnorm(as.double(house1947$age))
hist(as.double(house1947$age), breaks = "Freedman-Diaconis")
hist(as.double(house1947$age), breaks = "Stokes")
hist(as.double(house1947$age), breaks = "Scott")
hist(as.double(house1947$age), breaks = "scott")
qqnorm(as.double(house1947$age)); qqline(as.double(house1947$age))
qplot(as.double(age), data=house1947, geom="histogram")
head(as.double(house1947$age))
head(house1947$age)
View(house1947)
typeof(house1947$age)
typeof(house1947$age[1])
typeof(house1947$age[2])
house1947$age[1]
house1947[1]$age
congress = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/congress-age/congress-terms.csv", header = TRUE)
house1947 = subset(congress, chamber == "house" & lubridate::year(as.Date(termstart)) == 1947)
View(house1947)
head(house1947$age)
View(house1947)
hist(house1947$age)
typeof(house1947$age)
tail(house1947$age)
"senate" == "house"
"senate" == "senate"
lubridate::year(congress$termstart[1])
house1947 = subset(congress, chamber == "house" & lubridate::year(termstart) == 1947)
typeof(lubridate::year(congress$termstart[1]))
lubridate::year(congress$termstart[1]) == 1947
lubridate::year(congress$termstart[1]) == "1947"
house1947 = subset(congress, chamber == "house" && lubridate::year(termstart) == 1947)
house1947 = subset(congress, chamber == "house" && lubridate::year(termstart) == "1947")
house1947 = subset(congress, chamber == "house" && lubridate::year(as.Date(termstart)) == "1947")
hist(house1947$age)
hist(as.double(house1947$age))
congress = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/congress-age/congress-terms.csv", header = TRUE)
congress$age[1:10]
View(congress)
house1947 = subset(congress, chamber == "senate" && lubridate::year(as.Date(termstart)) == "1947")
hist(as.double(house1947$age))
levels(congress$chamber)
View(congress)
house1947 = subset(congress, chamber == "senate" && lubridate::year(as.Date(termstart)) == "1975")
house1947 = subset(congress, chamber == "senate" && lubridate::year(as.Date(termstart)) == 1975)
house1947 = subset(congress, chamber == "senate" && lubridate::year(as.Date(termstart)) == 1971)
View(house1947)
View(congress)
house1947 = subset(congress, chamber == "senate" && lubridate::year(as.Date(congress$termstart)) == 1947)
house1947 = subset(congress, chamber == "house" & lubridate::year(as.Date(congress$termstart)) == 1947)
house1947 <- congress[with(congress, chamber == "house" & lubridate::year(as.Date(termstart)) == 1947), ]
View(house1947)
house1947 <- congress[na.omit(with(congress, chamber == "house" & lubridate::year(as.Date(termstart)) == 1947)), ]
house1947 <- congress[with(na.omit(congress), chamber == "house" & lubridate::year(as.Date(termstart)) == 1947), ]
View(house1947)
house1947 <- congress[with(na.exclude(congress), chamber == "house" & lubridate::year(as.Date(termstart)) == 1947), ]
house1947 <- congress[with(na.omit(congress), chamber == "house" & lubridate::year(as.Date(termstart)) == 1947), ]
hist(house1947$age)
hist(as.double(house1947$age))
year(congress$termstart)
lubridate::year(congress$termstart[1])
lubridate::year(congress$termstart[100])
lubridate::year(congress$termstart[500])
lubridate::year(congress$termstart[900])
lubridate::year(congress$termstart[600])
lubridate::year(congress$termstart[453])
lubridate::year(congress$termstart[455])
head(as.numeric(congress$age))
head(as.double(congress$age))
head((congress$age))
typeof(congress$age)
as.integer(congress$age[1])
str(congress$age[1])
remove(congress)
remove(house1947)
congress = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/congress-age/congress-terms.csv", header = TRUE)
typeof(congress)
typeof(congress$chamber)
head(congress$chamber)
summary(birthdays)
c
a = c(1,2,3)
b = c(4,5,6)
d = c("a","b","c")
cbind(a,b)
rbind(a,b)
a = c(1,2,3);  typeof(a)
b = c(4,5,6);  print(class(b))
typeof(cbind(a,b))
e = list(a = "R", b = c("is", "fun"), e = pi)
e
e = list(x = "R", y = c("is", "fun"), z = pi)
e$x
str(e)
f = matrix(1:9, nrow = 3, ncol = 3)
f
det(f)
eig(f)
eigen(f)
cbind(a,b);  rbind(a,b,d)
cbind(a,b);  typeof(rbind(a,b,d))
cbind(a,b);  typeof(rbind(d,a,b))
cbind(a,b);  typeof(rbind(a,d,b))
cbind(a,b,d)
rbind(a,b,d)
lu(f)
Matrix::lu(f)
g = matrix(sample(1:10, size = 9, replace = TRUE), nrow = 3, ncol = 3)
g
Matrix::lu(g)
summary(f)
c(1 2 3)
mozarella1975 = gsub(", ", ",", "30,843	27,752	31,557	31,089	35,222	33,587	31,418	30,129	27,327	31,383	30,430	34,031")
mozarella1975
mozarella1975 =gsub(" ", "," gsub(",", "", "30,843	27,752	31,557	31,089	35,222	33,587	31,418	30,129	27,327	31,383	30,430	34,031"))
mozarella1975 =gsub(" ", ",", gsub(",", "", "30,843	27,752	31,557	31,089	35,222	33,587	31,418	30,129	27,327	31,383	30,430	34,031"))
mozarella1975
mc1973 = c(30843,	27752, 31557,	31089, 35222,	33587, 31418,	30129, 27327,	31383, 30430,	34031)
mc2004 = c(215333, 204911, 226643, 222094, 242950, 222523, 214999, 216362, 214577, 217289, 211547, 225771)
data.frame("1973" = mc1973, "2004" = mc2004)
data.frame(production1973 = mc1973, production2004 = mc2004)
summary(q)
q = data.frame(production1973 = mc1973, production2004 = mc2004)
summary(q)
mean(q$production1973)
mean(q$production1973);  median(q["production1973"])
plot(0:15, choose(15,0:15))
plot(0:15, choose(15,0:15), type="s")
plot(0:100, choose(100,0:100), type="s")
plot(0:100, choose(100,0:100))
runif(0:10)
runif(10)
x = seq(60, 140, 0.01)
plot(x, p1)
plot(x, y)
y = dnorm(x)
plot(x, y)
plot(x, y, type="l")
y = dnorm(x, mean = 100, sd = 10)
plot(x, y, type="l")
par(mfrow=c(2,2))
x = seq(60, 140, 0.01)
y = dnorm(x, mean = 100, sd = 10)
p1 = dnorm( seq(60, 80, 0.01), mean = 100, sd = 10 )
p2 = dnorm( seq(90, 110, 0.01), mean = 100, sd = 10 )
p3 = dnorm( seq(130, 140, 0.01), mean = 100, sd = 10 )
plot(x, y, type="l")
plot(x, y, type="l")
plot(x, y, type="l")
plot(x, y, type="l");  polygon(xRegion, p1, col = "blue")
xRegion = seq(60, 80, 0.01);
p1 = dnorm( xRegion, mean = 100, sd = 10 )
plot(x, y, type="l");  polygon(xRegion, p1, col = "blue")
plot(x, dnorm(x, mean = 10, sd = 10), type="l");  polygon(xRegion, p1, col = "lightblue")
x = seq(60, 140, 0.01)
xRegion = seq(60, 90, 0.01);
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, p1, col = "lightblue")
polygon(c(xRegion, 90, 60), dnorm(xRegion, mean=100, sd=10), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
x = seq(60, 140, 0.01)
xRegion = c(seq(60, 90, 0.01), 60, 90);
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
x = seq(60, 140, 0.01)
xRegion = c(seq(60, 90, 0.01), 60, 90);
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
plot.new()
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
plot(0:100, choose(100,0:100))
x = seq(60, 140, 0.01)
xRegion = c(seq(60, 90, 0.01), 60, 90);
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
par(mfrow=c(1,1))
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
x = seq(60, 140, 0.01)
xRegion = seq(60, 90, 0.01)
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
xRegion = c(seq(60, 90, 0.01), 60, 90)
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
xRegion = c(seq(60, 90, 0.01), 90,60)
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(xRegion, dnorm(xRegion, mean=100, sd=10), col = "lightblue")
x = seq(60, 140, 0.01)
xRegion = seq(60, 90, 0.01)
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(c(xRegion, 90, 60), c(dnorm(xRegion, mean=100, sd=10), 60, 60), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(c(xRegion, 90, 60), c(dnorm(xRegion, mean=100, sd=10), 60, 60), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(c(xRegion, 90, 60), c(pRegion, min(pRegion), min(pRegion)), col = "lightblue")
pRegion = dnorm(xRegion, mean=100, sd = 10)
plot(x, dnorm(x, mean=100, sd = 10), type="l")
polygon(c(xRegion, 90, 60), c(pRegion, min(pRegion), min(pRegion)), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l", xlab="x", ylab="P(x)")
plot(x, dnorm(x, mean=100, sd = 10), type="l", xlab="x", ylab="P(x)")
polygon(c(xRegion, 90, 60), c(pRegion, min(pRegion), min(pRegion)), col = "lightblue")
plot(x, dnorm(x, mean=100, sd = 10), type="l", xlab="x", ylab="P(x)")
polygon(c(xRegion, 90, 60), c(pRegion, min(pRegion), min(pRegion)), col = "lightblue")
hist(rexp(1000), xlab="x", ylab="Frequency", main="Histogram of exponential random numbers")
par(mfrow=c(2,2))
hist(rexp(1000), xlab="x", ylab="Frequency", main="Histogram of exponential random numbers")
curve(dexp, 0, 6, xlab="x", ylab="Probability density")
curve(pnorm, 0, 6, xlab="x", ylab="Cumulative probability")
curve(dexp, 0, 6, xlab="x", ylab="Probability density", col="red")
curve(pnorm, 0, 6, xlab="x", ylab="Cumulative probability", col="blue")
curve(qnorm, 0, 1, xlab="p", ylab="Quantile", col="darkGreen")
curve(qnorm, 0, 1, xlab="p", ylab="Quantile", col="green")
curve(qnorm, 0, 1, xlab="p", ylab="Quantile", col="orange")
names(q)
mc1973 = c(30843,	27752, 31557,	31089, 35222,	33587, 31418,	30129, 27327,	31383, 30430,	34031)
mc2004 = c(215333, 204911, 226643, 222094, 242950, 222523, 214999, 216362, 214577, 217289, 211547, 225771)
q = data.frame(production1973 = mc1973, production2004 = mc2004)
summary(q)
mean(q$production1973)
names(q)
# Multivariate normal distribution
library(MASS)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, .5, .5, 1), 2))
# now we do a kernel density estimate
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
# now plot your results
contour(bivn.kde)
image(bivn.kde)
persp(bivn.kde, phi = 45, theta = 30, shade = .1, border = NA)
biNormal <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
contour(biNormal)
image(biNormal)
biNormal <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
biNormal <- kde2d(biNormal[,1], biNormal[,2], n = 50)  # Kernel density estimate
contour(biNormal)
image(biNormal)
biNormal <- kde2d(biNormal[,1], biNormal[,2], n = 50)  # Kernel density estimate
image(biNormal)
contour(biNormal)
persp(biNormal, phi = 45, theta = 30, shade = .1, border = NA)
persp(biNormal, phi = 45, theta = 10, shade = .1, border = NA)
persp(biNormal, phi = 45, theta = 10, shade = .1, border = NA)
persp(biNormal, phi = 45, theta = 80, shade = .1, border = NA)
persp(biNormal, phi = 80, theta = 30, shade = .1, border = NA)
persp(biNormal, phi = 10, theta = 30, shade = .1, border = NA)
persp(biNormal, phi = 20, theta = 30, shade = .1, col = "lightgreen", border = NA)
persp(biNormal, phi = 20, theta = 30, shade = .1, col = "lightblue", border = NA)
biNormal <- kde2d(biNormal[,1], biNormal[,2], n = 100)  # Kernel density estimate
biNormal <- kde2d(biNormal[,1], biNormal[,2], n = 50)  # Kernel density estimate
biNormal <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
biNormal <- kde2d(biNormal[,1], biNormal[,2], n = 50)  # Kernel density estimate
image(biNormal)
contour(biNormal)
persp(biNormal, phi = 20, theta = 30, shade = .1, col = "lightblue", border = NA)
map(-2:2, rnorm, n = 5)
roi = matrix(0:pi, ncol=20)
roi
roi = matrix(seq(0, pi, length.out=20), nrow=10)
roi
simpson <- function(f, a, b) {
(b-a)/6 * (f(a) + 4*f((a + b)/2) + f(b))
}
simpson(sin, 0, pi)
intervals = matrix(seq(0, pi, length.out=20), nrow=10)
apply(intervals, 1, function(x) simpson(sin, x[1], x[2]))
intervals[1]
apply(intervals, 1, function(x) simpson(sin, x[,1], x[,2]))
intervals[1,]
simpson(sin, intervals[1,1], intervals[1,2])
intervals
intervals = matrix(seq(0, pi, length.out=20), ncol=2)
intervals
intervals = matrix(seq(0, pi, length.out=20), nrow=2)
intervals
intervals = matrix(seq(0, pi, length.out=20), ncol=2, byrow=T)
intervals
apply(intervals, 1, function(x) simpson(sin, x[1], x[2]))
sum(apply(intervals, 1, function(x) simpson(sin, x[1], x[2])))
intervals[1]
intervals[1,1]
intervals[1,2]
simpson(sin, intervals[1,1], intervals[1,2])
simpson(sin, intervals[2,1], intervals[2,2])
sum(tapply(intervals, function(x) simpson(sin, x[1], x[2])))
running(1:20, width=5, by=2)
library(gtools)
mapply(simpson, sin, intervals[-length(intervals)], intervals[-1])
simpson <- function(a, b) {
f = sin;
(b-a)/6 * (f(a) + 4*f((a + b)/2) + f(b))
}
mapply(simpson, intervals[-length(intervals)], intervals[-1])
sum(mapply(simpson, intervals[-length(intervals)], intervals[-1]))
intervals
intervals = seq(0, pi, length.out=20) #matrix(seq(0, pi, length.out=20), ncol=2, byrow=T)
sum(mapply(simpson, intervals[-length(intervals)], intervals[-1]))
sum(mapply(function(f, a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]))
sum(mapply(function(a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]))
simpson <- function(f, a, b) {
(b-a)/6 * (f(a) + 4*f((a + b)/2) + f(b))
}
sum(mapply(function(a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]))
intervals = seq(0, pi, length.out=30)
sum( mapply(function(a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]) )
intervals = seq(0, pi, length.out=25)
sum( mapply(function(a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]) )
intervals = seq(0, pi, length.out=20)
sum( mapply(function(a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]) )
simpson(sin, 0, pi)
intervals = seq(0, pi, length.out=25)
sum( mapply(function(a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]) )
length( mapply(function(a, b) simpson(sin, a, b), intervals[-length(intervals)], intervals[-1]) )
int = seq(0, pi, length.out=25)
int = seq(0, pi, length.out=25)
sum( mapply(function(a, b) simpson(sin, a, b), int[-length(int)], int[-1]) )
simpson <- function(a, b, f) {
(b-a)/6 * (f(a) + 4*f((a + b)/2) + f(b))
}
int = seq(0, pi, length.out=51)
sum( mapply(simpson(a, b, sin), int[-length(int)], int[-1], MoreArgs = sin) )
simpson <- function(a, b, f) {
(b-a)/6 * (f(a) + 4*f((a + b)/2) + f(b))
}
simpson(sin, 0, pi)  # Not a very good approximation
trapezoidal = function(f,a,b) { (b-a)/2 * (f(a) + f(b))  }
trapezoidal(sin, 0, pi)
trapezoidal = function(f,a,b) { ((b-a)/2) * (f(a) + f(b))  }
trapezoidal(sin, 0, pi)
(pi/2) * (sin(pi)+sin(0))
list(mean, median, sd, mode)
funs = list(mean, median, mode, sd)
map(funs, rnorm(10))
map(rnorm(10), funs)
rnorm(10)
rnorm(10) %>% funs
lapply(funs, rnorm(5))
lapply(funs, function(f) f(rcauchy(10)))
funs()
rcauchy(10)
lapply(funs, function(f) f(rpois(n=30, lambda=3)))
funs = list(mean, median, mode, sd, IQR)
funs = list(mean, median, mode, sd, IQR)
poissonSample = rpois(n=30, lambda=3)
lapply(funs, function(f) f(poissonSample))
str(lapply(funs, function(f) f(poissonSample)))
mode(poissonSample)
poissonSample
mode(poissonSample)
funs = list(mean, median, sd, IQR)
poissonSample = rpois(n=30, lambda=3)
str(lapply(funs, function(f) f(poissonSample)))
funs = list(mean = mean, median = median, stdDev = sd, IQR = IQR)
poissonSample = rpois(n=30, lambda=3)
str(lapply(funs, function(f) f(poissonSample)))
(lapply(funs, function(f) f(rpois(n=30, lambda=3))))
associationFun = list(chiSqTest = chisq.test, oddsRatio = epitools::oddsratio)
install.packages(epitools)
install.packages("epitools")
associationFun = list(chiSqTest = chisq.test, oddsRatio = epitools::oddsratio)
x=matrix(c(15, 19, 12, 8), nrow=2)
chisq.test(x)
1 %+-% 2
qnorm(0.95)
qnorm(0.975)
associationFun = list(chiSqTest = chisq.test,
oddsRatioCI = function(x) {
sdOR = sqrt(1/x[1,1] + 1/x[1,2] + 1/x[2,1] + 1/x[2,2])
logOR = log(epitools::oddsratio(x))
ciLower = exp(logOR - qnorm(0.975)*sdOR)
ciUpper = exp(logOR + qnorm(0.975)*sdOR)
return(c(ciLower, ciUpper))
})
a = lapply(associationFun, function(f) f(x))
x
epitools::oddsratio(x)
a = epitools::oddsratio(x)
a$measure
a$measure["lower"]
names(a$measure)
associationFun = list(chiSqTest = chisq.test,
oddsRatio = epitools::oddsratio$measure)
treatmentA = list(cured = 20, notCured = 40)
treatmentB = list(cured = 50, notCured = 10)
rbind(treatmentA, treatmentB)
associationFun = list(chiSqTest = chisq.test, oddsRatioCI = function(x) epitools::oddsratio(x)$measure)
lapply(associationFun, function(f) f(rbind(treatmentA, treatmentB)))
typeof(rbind(treatmentA, treatmentB))
x
typeof(x)
array(treatmentA, treatmentB)
array(rbind(treatmentA, treatmentB))
chisq.test(rbind(treatmentA, treatmentB))
epitools::oddsratio(treatmentA, treatmentB)
sort(treatmentA)
treatmentA = c(25, 30);  treatmentB = c(50, 5)
chisq.test(treatmentA, treatmentB)
treatmentA = c(30,20);  treatmentB = c(50, 5)
chisq.test(treatmentA, treatmentB)
commas = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/comma-survey-data/comma-survey-data.csv", header = TRUE)
View(commas)
View(commas)
head(commas[,4])
response = ordered(commas[,4], levels = c("Not at all", "Not much", "Some", "A lot"))
response
head(response)
head(commas[,4])
levels(commas$In.your.opinion..how.important.or.unimportant.is.proper.use.of.grammar.)
head(commas[,8])
table(commas[,8], commas[,4])
levels(commas[,8])
grammarImportance = ordered(commas[,8], levels = c("", "Very unimportant", "Somewhat unimportant", "Neither important nor unimportant (neutral)", "Somewhat important", "Very important"))
table(grammarImportance, response)
grammarImportance = ordered(commas[,8], levels = c("", "Very unimportant", "Somewhat unimportant", "Neither important nor unimportant (neutral)", "Somewhat important", "Very important"))
revalue(grammarImportance, c(""="No response")
revalue(grammarImportance, c(""="No response"))
levels(grammarImportance)
grammarImportance = ordered(commas[,8], levels = c("", "Very unimportant", "Somewhat unimportant", "Neither important nor unimportant (neutral)", "Somewhat important", "Very important"), addNA(commas[,8], ifany = FALSE))
table(response, grammarImportance)
commaImportance = ordered(commas[,4], levels = c("Not at all", "Not much", "Some", "A lot"))
table(grammarImportance, commaImportance)
